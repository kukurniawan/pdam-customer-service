// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pdam.Customer.Service.DataContext;

namespace Pdam.Customer.Service.Migrations
{
    [DbContext(typeof(CustomerContext))]
    [Migration("20210904024246_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BranchCode")
                        .HasColumnType("text");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("text");

                    b.Property<string>("CustomerGroupCode")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("RouterId")
                        .HasColumnType("uuid");

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RouterId");

                    b.HasIndex("CompanyCode", "CustomerCode")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("RT")
                        .HasColumnType("text");

                    b.Property<string>("RW")
                        .HasColumnType("text");

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Village")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateOfInstallation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateOfWithdraw")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InstalledBy")
                        .HasColumnType("text");

                    b.Property<string>("InstalledDocument")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("text");

                    b.Property<string>("WithdrawBy")
                        .HasColumnType("text");

                    b.Property<string>("WithdrawDocument")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAssets");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone1")
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone2")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PhoneLine1")
                        .HasColumnType("text");

                    b.Property<string>("PhoneLine2")
                        .HasColumnType("text");

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerStatusLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<byte>("RowStatusNewValue")
                        .HasColumnType("smallint");

                    b.Property<byte>("RowStatusOldValue")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerStatusLogs");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.Router", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BranchCode")
                        .HasColumnType("text");

                    b.Property<string>("CodeReader")
                        .HasColumnType("text");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DayInMonth")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("GroupRoute")
                        .HasColumnType("text");

                    b.Property<int>("IndexReading")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RouteCode")
                        .HasColumnType("text");

                    b.Property<string>("RouteName")
                        .HasColumnType("text");

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("UserProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Village")
                        .HasColumnType("text");

                    b.Property<string>("ZoneRoute")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyCode", "RouteCode")
                        .IsUnique();

                    b.ToTable("Router");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.Customer", b =>
                {
                    b.HasOne("Pdam.Customer.Service.DataContext.Router", "Router")
                        .WithMany("Customers")
                        .HasForeignKey("RouterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Router");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerAddress", b =>
                {
                    b.HasOne("Pdam.Customer.Service.DataContext.Customer", "Customer")
                        .WithOne("CustomerAddress")
                        .HasForeignKey("Pdam.Customer.Service.DataContext.CustomerAddress", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerAsset", b =>
                {
                    b.HasOne("Pdam.Customer.Service.DataContext.Customer", "Customer")
                        .WithMany("CustomerAssets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerContact", b =>
                {
                    b.HasOne("Pdam.Customer.Service.DataContext.Customer", "Customer")
                        .WithMany("CustomerContacts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.CustomerStatusLog", b =>
                {
                    b.HasOne("Pdam.Customer.Service.DataContext.Customer", "Customer")
                        .WithMany("CustomerStatusLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.Customer", b =>
                {
                    b.Navigation("CustomerAddress");

                    b.Navigation("CustomerAssets");

                    b.Navigation("CustomerContacts");

                    b.Navigation("CustomerStatusLogs");
                });

            modelBuilder.Entity("Pdam.Customer.Service.DataContext.Router", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
